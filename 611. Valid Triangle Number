Given an integer array nums, return the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.
 
Example 1:
Input: nums = [2,2,3,4]
Output: 3
Explanation: Valid combinations are: 
2,3,4 (using the first 2)
2,3,4 (using the second 2)
2,2,3
Example 2:
Input: nums = [4,2,3,4]
Output: 4


int cmp(const void *a, const void *b)
{
    return *(int *)a - *(int *)b;
}

int triangleNumber(int* a, int n){
    
    int i, j, k, count = 0;
    qsort(a, n, sizeof(int), cmp);

    for(i = n-1; i>=2; i--){
        k = i-1;
        j = 0;
        while( j < k ){
            if( a[j] + a[k] > a[i] ){
                count += k -j;
                k--;
            }else{
                j++;
            }
        } 
       
    }

    return count;
}
