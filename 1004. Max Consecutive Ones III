Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.
 
Example 1:
Input: nums = [1,1,1,0,0,0,1,1,1,1,0], k = 2
Output: 6
Explanation: [1,1,1,0,0,1,1,1,1,1,1]
Bolded numbers were flipped from 0 to 1. The longest subarray is underlined.

int longestOnes(int* a, int n, int k){

int i, count = 0, max_count = 0, left = 0, right = 0, zcount = 0;
for(i = 0; i<n; i++){
    if(a[i] == 0)
        zcount++;
    
    while(zcount > k){
        if(a[left] == 0)
            zcount--;
        left++;
    }
    count = i - left + 1;
    right++;
    if(count > max_count)
        max_count = count;
        
}
    return max_count;

}
