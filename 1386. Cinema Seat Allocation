int maxNumberOfFamilies(int n, int** a, int reservedSeatsSize, int* reservedSeatsColSize){
    
    if(a == NULL)
        return 0;
  
    int mask[3] = {30,120, 480};
    int *cur_reserve = (int *)calloc(n, sizeof(int));
    bzero(cur_reserve, sizeof(cur_reserve));
    int i, count= 0, index , creserve;
    for(i = 0; i < reservedSeatsSize; i++){
        
        if( a[i][0] != 0 ){
            index = a[i][0]-1;
            cur_reserve[index]  |=  1<<( a[i][1] -1);
        }
            
     }
    int left, middle, right;  
    int left_mask = 30; // 000 0011 110
    int middle_mask = 120;  // 000 1111 000
    int right_mask = 480;   // 011 1100 000
    
    for(i = 0; i< n; i++){
        creserve = cur_reserve[i]; 
        left   =  ( (creserve & left_mask) == 0) ;
        middle = ( (creserve & middle_mask) == 0) ;
        right =  ( (creserve & right_mask) == 0) ;        
            
        if(creserve <= 1 ||  ( left && right ) )
            count += 2;
        
        else if( left | right| middle)
            count++;       
        
    }
