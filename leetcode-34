int binary_search(int *a, int n, int k, int first){
    int index = -1;
    int mid, l, h;
    l = 0;
    h = n-1;
    while(l <= h){
        mid = (l+h)/2;
        if( a[mid] == k){
            index = mid;
//Search  in both left and right direction
            if (first)
                h = mid -1;
            else
                l = mid+1;
        }else if (k < a[mid])
            h = mid -1;
        else
            l = mid + 1;
        
        
    }
    return index;
    
}

int* searchRange(int* a, int n, int target, int* returnSize){
    
    *returnSize = 2;
    
    int *ret =(int*)calloc(2, sizeof(int)); 
    int first  = binary_search(a,n,target,1);
    int second = binary_search(a,n,target,0);
    
    ret[0] = first;
    ret[1] = second;
    return ret;
}
