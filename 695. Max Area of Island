void mark_island(int **a, int i, int j, int row, int col, int *c_max){
    
    if( i<0 || i>= row || j<0 || j>= col || a[i][j] != 1)
         return;   
     *c_max  = (*c_max) + 1;    
     a[i][j] = 2;    
     mark_island(a,i+1,j,row,col,c_max);   //DOWN 
     mark_island(a,i,j+1,row,col,c_max); // Right
     mark_island(a,i-1,j,row,col,c_max);  //TOP
     mark_island(a,i,j-1,row,col,c_max);    //LEFT
    return;
}

int maxAreaOfIsland(int** a, int n, int* gridColSize){
    
     int row, col, i,j,max= 0, c_max = 0;    
    if(n == 0)
        return 0;    
    row = n;
    col = *gridColSize;  
    if( a == NULL || row == 0 )
        return 0;
   
    for(i = 0;i<row; i++){        
        for(j = 0; j<col;j++){
             if( a[i][j] == 1){
                 
                 mark_island(a,i,j,row,col, &c_max);
                 if(max < c_max)
                    max = c_max; 
                 c_max = 0;
             }
        }
          
    }    
    return max;    
}
