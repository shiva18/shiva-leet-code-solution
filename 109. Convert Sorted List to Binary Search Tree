struct TreeNode* buildBST(struct ListNode* head, struct ListNode* tail) {
   
    struct ListNode *slow = head, *fast = head, *prev = head;
    struct TreeNode *root;
    if(head == tail)
        return NULL;
      
    while(fast != tail && fast->next != tail){        
        prev = slow;
        slow = slow->next;
        fast = fast->next->next;
    }
    root = (struct TreeNode *)malloc(sizeof(struct TreeNode));
    root->val = slow->val;
    Because we have exit condition if(head == tail)  hence we need to pass slow and not prev
    root->left = buildBST(head,slow);
    root->right = buildBST(slow->next, tail);
    return root;
}

struct TreeNode* sortedListToBST(struct ListNode* head){
    if (!head)
        return NULL;
    else
        return buildBST(head, NULL);
}
